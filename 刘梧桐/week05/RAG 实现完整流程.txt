RAG 实现完整流程
1、需求分析：
    ①、业务需求调研：明确用户要解决的业务问题和使用场景
    ②、功能范围界定：确定RAG系统需要覆盖的知识领域和问答能力
    ③、性能指标定义：设定响应时间、准确率、召回率等质量目标
    ④、资源评估：估算所需计算资源、存储资源和开发周期
    ⑤、风险评估：识别技术实现和业务落地的潜在风险

2、项目划分：
    ①、数据采集模块：负责多源数据的获取和整合
    ②、数据处理模块：完成数据清洗、预处理和格式化
    ③、向量化模块：实现文本到向量表示的转换
    ④、存储管理模块：负责向量数据库的维护和管理
    ⑤、检索服务模块：提供相似度搜索和文档检索功能
    ⑥、生成服务模块：集成LLM并生成最终答案
    ⑦、API接口模块：对外提供统一的查询服务
    ⑧、监控运维模块：系统性能监控和效果评估

3、实现阶段
    ①、数据整理阶段
        数据获取：从多种数据源收集文档（PDF、Word、网页、数据库等）
        数据清洗：去除无关内容、格式化文本、处理编码问题
        文本预处理：分词、去停用词、实体识别、文本规范化
        文档分割：按语义单元切分文档，设置合理的chunk大小和重叠区域
    ②、数据存储阶段
        向量化处理：使用嵌入模型将文本转换为向量表示
        元数据管理：为每个文档块添加来源、时间、重要性等元数据
        索引构建：在向量数据库中建立高效检索索引
        数据验证：确保存储数据的完整性和准确性
    ③、检索增强阶段
        查询处理：对用户查询进行预处理和向量化
        相似度检索：在向量数据库中进行近似最近邻搜索
        重排序优化：使用交叉编码器等技术对检索结果进行精排
        上下文构建：将相关文档片段组合成LLM可理解的提示词
    ④、生成输出阶段
        提示词工程：设计有效的提示词模板，包含检索到的上下文
        LLM集成：调用大语言模型生成最终答案
        后处理优化：对生成结果进行格式化、去偏差、事实核查
        结果返回：将处理后的答案返回给用户
