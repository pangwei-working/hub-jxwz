1.后台通过接口@app.post("/v1/document")，将管理端用户上传的文件保存并进行解析，将文本内容切分成多个语句块，通过本地分词器将每个语句块编码成对应的向量信息，将语句块和向量信息统一保存到es中

2.当用户输入文本时，调用接口@app.post("/chat")。
2.1 将用户输入的文本通过BM25算法，在指定的知识库中进行关键词匹配，得到结果word_search_response。
2.2 将用户输入的文本编码为向量，进行向量相似度搜索，得到结果vector_search_response。
2.3 将结果word_search_response重复出现的数据的分数累加。
2.4 将结果vector_search_response重复出现的数据的分数累加。
2.5 将两次的结果的分数相加后，根据分数进行倒序排序，获取分数最大的文本内容。
2.6 使用专门的交叉编码模型计算每对的相关性分数，并把分数最高的内容返回。
2.7 将返回的数据通过提示词模板处理后，调用远端大模型，并将大模型输出的内容返回。


